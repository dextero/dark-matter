#!/usr/bin/env python

from __future__ import print_function
import sys
import math
import itertools

in_file = '/dev/stdin'
size = None

if any(x in sys.argv for x in ('-h', '--help')):
    print('Converts a file containing a list of values into a "x y value" format for use with gnuplot\n'
          '\n'
          'usage:\n'
          '  * auto-detect image size:\n'
          '    {0} in_file\n'
          '  * use user-defined size:\n'
          '    {0} x_size y_size in_file'.format(sys.argv[0]))
    sys.exit(1)

if len(sys.argv) > 2:
    size = (int(sys.argv[1]), int(sys.argv[2]))
    sys.argv[1:] = sys.argv[3:]

elif len(sys.argv) > 1 and sys.argv[1] != '-':
    in_file = sys.argv[1]

def find_dims(total):
    x = int(math.sqrt(total))

    while x > 1:
        y = total / x
        if x * y == total:
            return x, y
        x -= 1

    raise ValueError('cannot determine input image dimensions (size = %d)' % (total,))

with open(in_file) as f:
    floats = [ float(x.strip()) for x in f.readlines() ]

    if not size:
        size = find_dims(len(floats))

    if len(floats) < size[0] * size[1]:
        print('invalid dimensions (%d x %d, but %d values in data)' % (size + (len(floats),)), file=sys.stderr)
        sys.exit(1)

    dims_gen = itertools.product(xrange(size[1]), xrange(size[0]))
    for xy, z in zip(dims_gen, floats):
        print('%d %d %f' % (xy + (z,)))
