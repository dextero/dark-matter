#!/bin/bash

set -e

SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"

function print_usage() {
    echo "usage: $0 [ options ] [ in_file ]"
    echo ""
    echo "options:"
    echo "  -h, --help          - print this message and exit"
    echo "  -l, --little-endian - interpret data as little-endian floats (default)"
    echo "  -b, --big-endian    - interpret data as big-endian floats"
    echo "  -o, --output FILE   - save output image to FILE"
    echo "  -f, --fits          - read IN_FILE as FITS"
    echo "  -F, --fits-fft      - read IN_FILE as fourier-transformed FITS"
    echo ""
}

ENDIANNESS='<'
IN_FILE='/dev/stdin'
OUTPUT_PNG="$(mktemp).png"
FITS=''

while [[ "$#" -gt 0 ]]; do
    case "$1" in
    '-l'|'--little-endian') ENDIANNESS='<' ;;
    '-b'|'--big-endian')    ENDIANNESS='>' ;;
    '-f'|'--fits')          FITS='fits' ;;
    '-F'|'--fits-fft')      FITS='fits-fft' ;;
    '-o'|'--output')
        shift
        OUTPUT_PNG="$1"
        ;;
    '-h'|'--help')
        print_usage
        exit 1
        ;;
    *)
        IN_FILE="$1"
        ;;
    esac

    shift
done

if [[ "$FITS" ]]; then
    WIDTH="$("$SCRIPT_DIR/fits-get" header NAXIS1 "$IN_FILE")"
    HEIGHT="$("$SCRIPT_DIR/fits-get" header NAXIS2 "$IN_FILE")"

    if [[ "$IN_FILE" == '/dev/stdin' ]]; then
        TMPFILE="$(mktemp)"
        cat "$IN_FILE" > "$TMPFILE"
        IN_FILE="$TMPFILE"
    fi

    TMPFILE="$(mktemp)"
    "$SCRIPT_DIR/fits-get" data "$IN_FILE" > "$TMPFILE"
    IN_FILE="$TMPFILE"

    if [[ "$FITS" == 'fits-fft' ]]; then
        TMPFILE="$(mktemp)"
        "$SCRIPT_DIR/fft" -b -i "$WIDTH" "$HEIGHT" "$IN_FILE" > "$TMPFILE"
        IN_FILE="$TMPFILE"
    fi
fi

TMPFILE="$(mktemp)"
"$SCRIPT_DIR/decode" "${ENDIANNESS}f" "$IN_FILE" | "$SCRIPT_DIR/make-2d" $WIDTH $HEIGHT > "$TMPFILE"
gnuplot <<EOF
set term png size 1000, 1000
set output "$OUTPUT_PNG"
set view map
splot '$TMPFILE' using 1:2:3 with image
EOF

eog "$OUTPUT_PNG"

